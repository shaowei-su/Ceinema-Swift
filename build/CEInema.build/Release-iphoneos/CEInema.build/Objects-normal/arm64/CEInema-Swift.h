// Generated by Apple Swift version 1.2 (swiftlang-602.0.53.1 clang-602.0.53)
#pragma clang diagnostic push

#if defined(__has_include) && __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if defined(__has_include) && __has_include(<uchar.h>)
# include <uchar.h>
#elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
#endif

typedef struct _NSZone NSZone;

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif

#if defined(__has_attribute) && __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if defined(__has_attribute) && __has_attribute(objc_subclassing_restricted) 
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if defined(__has_attribute) && __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_EXTRA _name : _type
#endif
#if __has_feature(nullability)
#  define SWIFT_NULLABILITY(X) X
#else
# if !defined(__nonnull)
#  define __nonnull
# endif
# if !defined(__nullable)
#  define __nullable
# endif
# if !defined(__null_unspecified)
#  define __null_unspecified
# endif
#  define SWIFT_NULLABILITY(X)
#endif
#if defined(__has_feature) && __has_feature(modules)
@import UIKit;
@import Foundation;
@import MessageUI;
@import CoreGraphics;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
@class UIImageView;
@class UILabel;
@class NSCoder;

SWIFT_CLASS("_TtC7CEInema16AllTableViewCell")
@interface AllTableViewCell : UITableViewCell
@property (nonatomic, weak) IBOutlet UIImageView * __null_unspecified mediaImage;
@property (nonatomic, weak) IBOutlet UILabel * __null_unspecified mediaTitle;
@property (nonatomic, weak) IBOutlet UILabel * __null_unspecified mediaPresentor;
@property (nonatomic, weak) IBOutlet UILabel * __null_unspecified mediaDate;
- (void)awakeFromNib;
- (void)setSelected:(BOOL)selected animated:(BOOL)animated;
- (SWIFT_NULLABILITY(nonnull) instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * __nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER;
- (SWIFT_NULLABILITY(nonnull) instancetype)initWithCoder:(NSCoder * __nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class UITableView;
@class NSXMLParser;
@class NSMutableArray;
@class NSMutableDictionary;
@class NSString;
@class NSMutableString;
@class UISearchController;
@class NSObject;
@class NSIndexPath;
@class UIStoryboardSegue;
@class UIRefreshControl;
@class UISearchBar;
@class NSBundle;

SWIFT_CLASS("_TtC7CEInema22AllTableViewController")
@interface AllTableViewController : UITableViewController <NSXMLParserDelegate, UISearchResultsUpdating, UISearchControllerDelegate>
@property (nonatomic, weak) IBOutlet UISearchBar * __null_unspecified searchDisplay;
@property (nonatomic) IBOutlet UITableView * __null_unspecified allData;
@property (nonatomic) NSXMLParser * __nonnull parser;
@property (nonatomic) NSMutableArray * __nonnull posts;
@property (nonatomic) NSMutableDictionary * __nonnull elements;
@property (nonatomic) NSString * __nonnull element;
@property (nonatomic) NSMutableString * __nonnull mediaTitle;
@property (nonatomic) NSMutableString * __nonnull presenterName;
@property (nonatomic) NSMutableString * __nonnull mediaDateReleased;
@property (nonatomic) NSMutableString * __nonnull mediaThumbPath;
@property (nonatomic) NSMutableString * __nonnull mediaID;
@property (nonatomic, copy) NSArray * __nonnull filteredPosts;
@property (nonatomic) UISearchController * __nonnull resultSearchController;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
- (void)viewDidLoad;

/// Two main operations:
///
/// <ol><li><p>Use MBProgressHUD to add the loading activity indicator, start parse() with a separate queue at background.</p></li><li><p>Create a search controller then add to the tableview</p></li></ol>
/// \param nothing 
///
/// \returns nothing
- (void)preParsing;
- (void)beginParsing;
- (void)parser:(NSXMLParser * __nonnull)parser didStartElement:(NSString * __nonnull)elementName namespaceURI:(NSString * __nullable)namespaceURI qualifiedName:(NSString * __nullable)qName attributes:(NSDictionary * __nonnull)attributeDict;
- (void)parser:(NSXMLParser * __nonnull)parser didEndElement:(NSString * __nonnull)elementName namespaceURI:(NSString * __nullable)namespaceURI qualifiedName:(NSString * __nullable)qName;
- (void)parser:(NSXMLParser * __nonnull)parser foundCharacters:(NSString * __nullable)string;
- (NSInteger)numberOfSectionsInTableView:(UITableView * __nonnull)tableView;
- (NSInteger)tableView:(UITableView * __nonnull)tableView numberOfRowsInSection:(NSInteger)section;
- (UITableViewCell * __nonnull)tableView:(UITableView * __nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * __nonnull)indexPath;
- (void)prepareForSegue:(UIStoryboardSegue * __nonnull)segue sender:(id __nullable)sender;

/// Search function support.
/// Split input string by " "(empty space) for multiple search.
/// Keywords match both media title and presenter name
///
/// \param String user input string
///
/// \returns nothing
- (void)filterContentForSearchText:(NSString * __nonnull)searchText;
- (void)updateSearchResultsForSearchController:(UISearchController * __nonnull)searchController;

/// Interact with webserver whenever finish search
- (void)willDismissSearchController:(UISearchController * __nonnull)searchController;
- (IBAction)refreshTable:(UIRefreshControl * __nullable)sender;
- (SWIFT_NULLABILITY(nonnull) instancetype)initWithStyle:(UITableViewStyle)style OBJC_DESIGNATED_INITIALIZER;
- (SWIFT_NULLABILITY(null_unspecified) instancetype)initWithNibName:(NSString * __null_unspecified)nibNameOrNil bundle:(NSBundle * __null_unspecified)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (SWIFT_NULLABILITY(null_unspecified) instancetype)initWithCoder:(NSCoder * __null_unspecified)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class UIWindow;
@protocol GAITracker;
@class UIApplication;
@class NSURL;
@class NSManagedObjectModel;
@class NSPersistentStoreCoordinator;
@class NSManagedObjectContext;

SWIFT_CLASS("_TtC7CEInema11AppDelegate")
@interface AppDelegate : UIResponder <UIApplicationDelegate>
@property (nonatomic) UIWindow * __nullable window;
@property (nonatomic) id <GAITracker> __nullable tracker;
+ (void)setupGoogleAnalytics;
- (BOOL)application:(UIApplication * __nonnull)application didFinishLaunchingWithOptions:(NSDictionary * __nullable)launchOptions;
- (void)applicationWillResignActive:(UIApplication * __nonnull)application;
- (void)applicationDidEnterBackground:(UIApplication * __nonnull)application;
- (void)applicationWillEnterForeground:(UIApplication * __nonnull)application;
- (void)applicationDidBecomeActive:(UIApplication * __nonnull)application;
- (void)applicationWillTerminate:(UIApplication * __nonnull)application;
@property (nonatomic) NSURL * __nonnull applicationDocumentsDirectory;
@property (nonatomic) NSManagedObjectModel * __nonnull managedObjectModel;
@property (nonatomic) NSPersistentStoreCoordinator * __nullable persistentStoreCoordinator;
@property (nonatomic) NSManagedObjectContext * __nullable managedObjectContext;
- (void)saveContext;
- (SWIFT_NULLABILITY(nonnull) instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class UIImage;
@class UIScrollView;
@class UIButton;
@class UIPageControl;

SWIFT_CLASS("_TtC7CEInema18HomeViewController")
@interface HomeViewController : UIViewController <UIScrollViewDelegate>
@property (nonatomic, weak) IBOutlet UIButton * __null_unspecified visitHomeButton;
@property (nonatomic, weak) IBOutlet UIScrollView * __null_unspecified pageScrollView;
@property (nonatomic, weak) IBOutlet UIPageControl * __null_unspecified pageControl;
@property (nonatomic, copy) NSArray * __nonnull pageImages;
- (IBAction)VisitHomepage:(id __nonnull)sender;

/// Call CEI line when the "call" button touched
///
/// \param AnyObject passed in from storyboard
///
/// \returns nothing
- (IBAction)callCEI:(id __nonnull)sender;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidLoad;

/// Move the carousel pages automatically to the next page.
/// To the first page if the reaches the end
///
/// \param nothing 
///
/// \returns nothing
- (void)moveToNextPage;

/// Dynamically load pageview on the paged scroll view
///
/// \param int one int number indicate the position of current page
///
/// \returns nothing
- (void)loadPage:(NSInteger)page;

/// Remove a page from the scroll view and reset the container array
///
/// \param int one int number indicate the position of current page
///
/// \returns nothing
- (void)purgePage:(NSInteger)page;

/// Dynamically load current page on scroll view.
/// After determining the position, call loadPage() and purgePage().
///
/// \param nothing 
///
/// \returns nothing
- (void)loadVisiblePages;
- (void)scrollViewDidScroll:(UIScrollView * __nonnull)scrollView;
- (void)willAnimateRotationToInterfaceOrientation:(UIInterfaceOrientation)toInterfaceOrientation duration:(NSTimeInterval)duration;

/// Detect the tap event and trigger following behaviors
///
/// For different pages:
///
/// <ol><li><p>Page two: call cei line</p></li><li><p>Page three: perform segue and move the the tools page</p></li><li><p>page four: perform segue and move to newsletter sign up page</p></li></ol>
/// \param nothing 
///
/// \returns nothing
- (void)tapDetected;
- (SWIFT_NULLABILITY(nonnull) instancetype)initWithNibName:(NSString * __nullable)nibNameOrNil bundle:(NSBundle * __nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (SWIFT_NULLABILITY(nonnull) instancetype)initWithCoder:(NSCoder * __nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class UIView;
@class NSData;
@class MFMailComposeViewController;
@class NSError;
@class UIBarButtonItem;

SWIFT_CLASS("_TtC7CEInema25MediaDetailViewController")
@interface MediaDetailViewController : UIViewController <MFMailComposeViewControllerDelegate, UINavigationControllerDelegate>
@property (nonatomic, weak) IBOutlet UILabel * __null_unspecified mediaDetailTitle;
@property (nonatomic, weak) IBOutlet UILabel * __null_unspecified mediaDateLabel;
@property (nonatomic, weak) IBOutlet UILabel * __null_unspecified presenterNameLabel;
@property (nonatomic, weak) IBOutlet UILabel * __null_unspecified presenterTitleLabel;
@property (nonatomic, weak) IBOutlet UILabel * __null_unspecified presenterEmpLabel;
@property (nonatomic, weak) IBOutlet UIImageView * __null_unspecified mediaImage;
@property (nonatomic, weak) IBOutlet UILabel * __null_unspecified objContentsLabel;
- (IBAction)playButtonTouched:(UIButton * __nonnull)sender;
@property (nonatomic) IBOutlet UIView * __null_unspecified mediaDetailView;
@property (nonatomic, weak) IBOutlet UIBarButtonItem * __null_unspecified shareButton;
@property (nonatomic, copy) NSString * __nonnull mediaTitle;
@property (nonatomic, copy) NSString * __nonnull mediaID;
@property (nonatomic, copy) NSString * __nonnull mediaDate;
@property (nonatomic, copy) NSString * __nonnull presenterName;
@property (nonatomic, copy) NSString * __nonnull presenterLastName;
@property (nonatomic, copy) NSString * __nonnull presenterCred;
@property (nonatomic, copy) NSString * __nonnull presenterTitle;
@property (nonatomic, copy) NSString * __nonnull presenterEmp;
@property (nonatomic, copy) NSString * __nonnull imgThumbnail;
@property (nonatomic, copy) NSString * __nonnull videoFormatPath;
@property (nonatomic, copy) NSString * __nonnull videoFormatFileName;
@property (nonatomic, copy) NSString * __nonnull objectives;
@property (nonatomic, copy) NSString * __nonnull fetchUrl;
@property (nonatomic, copy) NSString * __nonnull mediaUrl;
@property (nonatomic) NSData * __nullable xmlData;
- (void)viewWillAppear:(BOOL)animated;

/// add MPVC to the view
///
/// \param nothing 
///
/// \returns nothing
- (void)playMovie;
- (IBAction)contactButton:(id __nonnull)sender;

/// compose email to CEI support team
///
/// \param nothing 
///
/// \returns nothing
- (void)emailCEI;
- (void)viewDidLoad;

/// Parse XML file by SWXMLHash.
/// Then demonstrate parsed info on media detail page
///
/// \param nothing 
///
/// \returns nothing
- (void)beginParsing;
- (IBAction)saveButton:(id __nonnull)sender;

/// Once the user press save button:
///
/// <ol><li><p>Trigger html request to save the media ID</p></li><li><p>Save media info into Core Data</p></li></ol>
/// \param title The title of one media
///
/// \param presenter Full name of the presenter
///
/// \param date Date of the presentation
///
/// \param imageThumbnail Short url of thumbnail image
///
/// \returns nothing
- (void)saveMedia:(NSString * __nonnull)title presenter:(NSString * __nonnull)presenter date:(NSString * __nonnull)date imageThumbnail:(NSString * __nonnull)imageThumbnail id:(NSString * __nonnull)id;

/// Verify the media video url to see if WOWZA media server is working
///
/// \param urlString Completed video url
///
/// \returns true / false
- (BOOL)verifyUrl:(NSString * __nullable)urlString;
- (void)mailComposeController:(MFMailComposeViewController * __null_unspecified)controller didFinishWithResult:(MFMailComposeResult)result error:(NSError * __null_unspecified)error;
- (IBAction)PostSocialMedia:(id __nonnull)sender;
- (SWIFT_NULLABILITY(nonnull) instancetype)initWithNibName:(NSString * __nullable)nibNameOrNil bundle:(NSBundle * __nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (SWIFT_NULLABILITY(nonnull) instancetype)initWithCoder:(NSCoder * __nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class NSManagedObject;

SWIFT_CLASS("_TtC7CEInema24SavedTableViewController")
@interface SavedTableViewController : UITableViewController
@property (nonatomic) IBOutlet UITableView * __null_unspecified savedTableView;
@property (nonatomic, copy) NSArray * __nonnull media;
- (void)viewWillAppear:(BOOL)animated;

/// Fetch data from Core Data and then reload the table view
- (void)loadData;
- (void)setEditing:(BOOL)editing animated:(BOOL)animated;
- (void)viewDidLoad;
- (void)didReceiveMemoryWarning;
- (NSInteger)numberOfSectionsInTableView:(UITableView * __nonnull)tableView;
- (NSInteger)tableView:(UITableView * __nonnull)tableView numberOfRowsInSection:(NSInteger)section;
- (UITableViewCell * __nonnull)tableView:(UITableView * __nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * __nonnull)indexPath;
- (BOOL)tableView:(UITableView * __nonnull)tableView canEditRowAtIndexPath:(NSIndexPath * __nonnull)indexPath;
- (void)tableView:(UITableView * __nonnull)tableView commitEditingStyle:(UITableViewCellEditingStyle)editingStyle forRowAtIndexPath:(NSIndexPath * __nonnull)indexPath;

/// seque to the detail view
- (void)prepareForSegue:(UIStoryboardSegue * __nonnull)segue sender:(id __nullable)sender;
- (SWIFT_NULLABILITY(nonnull) instancetype)initWithStyle:(UITableViewStyle)style OBJC_DESIGNATED_INITIALIZER;
- (SWIFT_NULLABILITY(null_unspecified) instancetype)initWithNibName:(NSString * __null_unspecified)nibNameOrNil bundle:(NSBundle * __null_unspecified)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (SWIFT_NULLABILITY(null_unspecified) instancetype)initWithCoder:(NSCoder * __null_unspecified)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class UITextField;

SWIFT_CLASS("_TtC7CEInema20SignupViewController")
@interface SignupViewController : UIViewController <UITextFieldDelegate>
@property (nonatomic, weak) IBOutlet UITextField * __null_unspecified SignupName;
@property (nonatomic, weak) IBOutlet UITextField * __null_unspecified SignupEmail;
- (IBAction)ConfirmButton:(id __nonnull)sender;
- (IBAction)CancelButton:(id __nonnull)sender;
- (void)viewDidLoad;
- (BOOL)textFieldShouldReturn:(UITextField * __nonnull)textField;
- (void)textFieldDidBeginEditing:(UITextField * __nonnull)textField;
- (void)textFieldDidEndEditing:(UITextField * __nonnull)textField;
- (void)animateViewMoving:(BOOL)up moveValue:(CGFloat)moveValue;

/// Validate the email address
///
/// \param String input email address
///
/// \returns Bool indicate if the addresss is valid or not
- (BOOL)isValidEmail:(NSString * __nonnull)testStr;
- (SWIFT_NULLABILITY(nonnull) instancetype)initWithNibName:(NSString * __nullable)nibNameOrNil bundle:(NSBundle * __nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (SWIFT_NULLABILITY(nonnull) instancetype)initWithCoder:(NSCoder * __nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7CEInema18ToolsTableViewCell")
@interface ToolsTableViewCell : UITableViewCell
@property (nonatomic, weak) IBOutlet UILabel * __null_unspecified toolTitle;
@property (nonatomic, weak) IBOutlet UILabel * __null_unspecified toolPostingDate;
@property (nonatomic, weak) IBOutlet UILabel * __null_unspecified toolPublisher;
- (void)awakeFromNib;
- (void)setSelected:(BOOL)selected animated:(BOOL)animated;
- (SWIFT_NULLABILITY(nonnull) instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * __nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER;
- (SWIFT_NULLABILITY(nonnull) instancetype)initWithCoder:(NSCoder * __nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7CEInema24ToolsTableViewController")
@interface ToolsTableViewController : UITableViewController
@property (nonatomic) IBOutlet UITableView * __null_unspecified toolsData;
@property (nonatomic) NSInteger toolCounter;
@property (nonatomic, copy) NSDictionary * __nonnull toolMap;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidLoad;

/// Parse XML file by SWXMLHash. 
/// After that, eliminate tuples that marked as "hide"
/// The map "toolmap" will map the index in table view to the index in parsed XML Indexer
///
/// \param nothing 
///
/// \returns nothing
- (void)beginParsing;
- (NSInteger)numberOfSectionsInTableView:(UITableView * __nonnull)tableView;
- (NSInteger)tableView:(UITableView * __nonnull)tableView numberOfRowsInSection:(NSInteger)section;
- (UITableViewCell * __nonnull)tableView:(UITableView * __nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * __nonnull)indexPath;
- (void)prepareForSegue:(UIStoryboardSegue * __nonnull)segue sender:(id __nullable)sender;
- (SWIFT_NULLABILITY(nonnull) instancetype)initWithStyle:(UITableViewStyle)style OBJC_DESIGNATED_INITIALIZER;
- (SWIFT_NULLABILITY(null_unspecified) instancetype)initWithNibName:(NSString * __null_unspecified)nibNameOrNil bundle:(NSBundle * __null_unspecified)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (SWIFT_NULLABILITY(null_unspecified) instancetype)initWithCoder:(NSCoder * __null_unspecified)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class UIWebView;

SWIFT_CLASS("_TtC7CEInema22ToolsWebViewController")
@interface ToolsWebViewController : UIViewController
@property (nonatomic, weak) IBOutlet UIWebView * __null_unspecified toolWebView;
@property (nonatomic, copy) NSString * __nonnull toolUrl;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidLoad;
- (SWIFT_NULLABILITY(nonnull) instancetype)initWithNibName:(NSString * __nullable)nibNameOrNil bundle:(NSBundle * __nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (SWIFT_NULLABILITY(nonnull) instancetype)initWithCoder:(NSCoder * __nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7CEInema17WebViewController")
@interface WebViewController : UIViewController
@property (nonatomic, weak) IBOutlet UIWebView * __null_unspecified webView;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidLoad;
- (void)didReceiveMemoryWarning;
- (SWIFT_NULLABILITY(nonnull) instancetype)initWithNibName:(NSString * __nullable)nibNameOrNil bundle:(NSBundle * __nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (SWIFT_NULLABILITY(nonnull) instancetype)initWithCoder:(NSCoder * __nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

#pragma clang diagnostic pop
