// Generated by Apple Swift version 1.2 (swiftlang-602.0.53.1 clang-602.0.53)
#pragma clang diagnostic push

#if defined(__has_include) && __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if defined(__has_include) && __has_include(<uchar.h>)
# include <uchar.h>
#elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
#endif

typedef struct _NSZone NSZone;

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif

#if defined(__has_attribute) && __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if defined(__has_attribute) && __has_attribute(objc_subclassing_restricted) 
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if defined(__has_attribute) && __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_EXTRA _name : _type
#endif
#if __has_feature(nullability)
#  define SWIFT_NULLABILITY(X) X
#else
# if !defined(__nonnull)
#  define __nonnull
# endif
# if !defined(__nullable)
#  define __nullable
# endif
# if !defined(__null_unspecified)
#  define __null_unspecified
# endif
#  define SWIFT_NULLABILITY(X)
#endif
#if defined(__has_feature) && __has_feature(modules)
@import UIKit;
@import Foundation;
@import MessageUI;
@import CoreGraphics;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
@class UIImageView;
@class UILabel;
@class NSCoder;


/// Contains the prototype info of lecture table view
SWIFT_CLASS("_TtC7CEInema16AllTableViewCell")
@interface AllTableViewCell : UITableViewCell

/// Lecture image thumbnail outlet
@property (nonatomic, weak) IBOutlet UIImageView * __null_unspecified mediaImage;

/// Lecture title label outlet
@property (nonatomic, weak) IBOutlet UILabel * __null_unspecified mediaTitle;

/// Lecture presentor label outlet
@property (nonatomic, weak) IBOutlet UILabel * __null_unspecified mediaPresentor;

/// Lecture date label outlet
@property (nonatomic, weak) IBOutlet UILabel * __null_unspecified mediaDate;
- (SWIFT_NULLABILITY(nonnull) instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * __nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER;
- (SWIFT_NULLABILITY(nonnull) instancetype)initWithCoder:(NSCoder * __nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class UITableView;
@class NSXMLParser;
@class NSMutableArray;
@class NSMutableDictionary;
@class NSString;
@class NSMutableString;
@class UISearchController;
@class NSObject;
@class NSIndexPath;
@class UIStoryboardSegue;
@class UIRefreshControl;
@class UISearchBar;
@class NSBundle;


/// Controller of lecture table view.
///
/// Main functions:
///
/// <ol><li><p>Load table view with lectures info parsed from web server</p></li><li><p>Search controller supports user defined search</p></li><li><p>Drag Down refresh</p></li><li><p>Segue to lecture detail page</p></li></ol>
SWIFT_CLASS("_TtC7CEInema22AllTableViewController")
@interface AllTableViewController : UITableViewController <NSXMLParserDelegate, UISearchResultsUpdating, UISearchControllerDelegate>

/// search bar outlet
@property (nonatomic, weak) IBOutlet UISearchBar * __null_unspecified searchDisplay;

/// table view outlet
@property (nonatomic) IBOutlet UITableView * __null_unspecified allData;

/// xml parser
@property (nonatomic) NSXMLParser * __nonnull parser;

/// posts contains all parsed lecture info (multiple key-value pairs saved in elements)
@property (nonatomic) NSMutableArray * __nonnull posts;

/// multiple key-value pairs saved in elements
@property (nonatomic) NSMutableDictionary * __nonnull elements;

/// element stores xml file element name parsed in
@property (nonatomic) NSString * __nonnull element;

/// mediaTitle parsed in
@property (nonatomic) NSMutableString * __nonnull mediaTitle;

/// presenterName parsed in
@property (nonatomic) NSMutableString * __nonnull presenterName;

/// mediaDateReleased parsed in
@property (nonatomic) NSMutableString * __nonnull mediaDateReleased;

/// mediaThumbPath parsed in
@property (nonatomic) NSMutableString * __nonnull mediaThumbPath;

/// mediaID parsed in
@property (nonatomic) NSMutableString * __nonnull mediaID;

/// contains lectures that are filtered by search controller
@property (nonatomic, copy) NSArray * __nonnull filteredPosts;

/// search controller for user defined search
@property (nonatomic) UISearchController * __nonnull resultSearchController;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
- (void)viewDidLoad;

/// Two main operations:
///
/// <ol><li><p>Use MBProgressHUD to add the loading activity indicator, start parse() with a separate queue at background.</p></li><li><p>Create a search controller then add to the tableview</p></li></ol>
/// \param nothing 
///
/// \returns nothing
- (void)preParsing;

/// begin parse with NSXMLParser()
- (void)beginParsing;
- (void)parser:(NSXMLParser * __nonnull)parser didStartElement:(NSString * __nonnull)elementName namespaceURI:(NSString * __nullable)namespaceURI qualifiedName:(NSString * __nullable)qName attributes:(NSDictionary * __nonnull)attributeDict;
- (void)parser:(NSXMLParser * __nonnull)parser didEndElement:(NSString * __nonnull)elementName namespaceURI:(NSString * __nullable)namespaceURI qualifiedName:(NSString * __nullable)qName;
- (void)parser:(NSXMLParser * __nonnull)parser foundCharacters:(NSString * __nullable)string;
- (NSInteger)numberOfSectionsInTableView:(UITableView * __nonnull)tableView;
- (NSInteger)tableView:(UITableView * __nonnull)tableView numberOfRowsInSection:(NSInteger)section;
- (UITableViewCell * __nonnull)tableView:(UITableView * __nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * __nonnull)indexPath;
- (void)prepareForSegue:(UIStoryboardSegue * __nonnull)segue sender:(id __nullable)sender;

/// Search function support.
/// Split input string by " "(empty space) for multiple search.
/// Keywords match both media title and presenter name
///
/// \param String user input string
///
/// \returns nothing
- (void)filterContentForSearchText:(NSString * __nonnull)searchText;
- (void)updateSearchResultsForSearchController:(UISearchController * __nonnull)searchController;

/// Interact with webserver whenever finish search
- (void)willDismissSearchController:(UISearchController * __nonnull)searchController;
- (IBAction)refreshTable:(UIRefreshControl * __nullable)sender;
- (SWIFT_NULLABILITY(nonnull) instancetype)initWithStyle:(UITableViewStyle)style OBJC_DESIGNATED_INITIALIZER;
- (SWIFT_NULLABILITY(null_unspecified) instancetype)initWithNibName:(NSString * __null_unspecified)nibNameOrNil bundle:(NSBundle * __null_unspecified)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (SWIFT_NULLABILITY(null_unspecified) instancetype)initWithCoder:(NSCoder * __null_unspecified)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class UIWindow;
@protocol GAITracker;
@class UIApplication;
@class NSURL;
@class NSManagedObjectModel;
@class NSPersistentStoreCoordinator;
@class NSManagedObjectContext;

SWIFT_CLASS("_TtC7CEInema11AppDelegate")
@interface AppDelegate : UIResponder <UIApplicationDelegate>
@property (nonatomic) UIWindow * __nullable window;

/// Google Analytics Tracker instance
@property (nonatomic) id <GAITracker> __nullable tracker;

/// set up Google Analytics as a global function that can be reached by other controller class.
/// Need to specify unique trackID here
///
/// \param none 
///
/// \returns none
+ (void)setupGoogleAnalytics;
- (BOOL)application:(UIApplication * __nonnull)application didFinishLaunchingWithOptions:(NSDictionary * __nullable)launchOptions;
- (void)applicationWillResignActive:(UIApplication * __nonnull)application;
- (void)applicationDidEnterBackground:(UIApplication * __nonnull)application;
- (void)applicationWillEnterForeground:(UIApplication * __nonnull)application;
- (void)applicationDidBecomeActive:(UIApplication * __nonnull)application;
- (void)applicationWillTerminate:(UIApplication * __nonnull)application;

/// The directory the application uses to store the Core Data store file.
@property (nonatomic) NSURL * __nonnull applicationDocumentsDirectory;

/// The managed object model for the application. This property is not optional. It is a fatal error for the application not to be able to find and load its model.
@property (nonatomic) NSManagedObjectModel * __nonnull managedObjectModel;

/// The persistent store coordinator for the application. This implementation creates and return a coordinator, having added the store for the application to it. This property is optional since there are legitimate error conditions that could cause the creation of the store to fail.
/// Create the coordinator and store
@property (nonatomic) NSPersistentStoreCoordinator * __nullable persistentStoreCoordinator;

/// Returns the managed object context for the application (which is already bound to the persistent store coordinator for the application.) 
/// This property is optional since there are legitimate error conditions that could cause the creation of the context to fail.
@property (nonatomic) NSManagedObjectContext * __nullable managedObjectContext;

/// Replace this implementation with code to handle the error appropriately.
/// abort() causes the application to generate a crash log and terminate. You should not use this function in a shipping application, although it may be useful during development.
- (void)saveContext;
- (SWIFT_NULLABILITY(nonnull) instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class UIImage;
@class UIScrollView;
@class UITabBarController;
@class UIButton;
@class UIPageControl;


/// Home view controller.
/// Main functions
///
/// <ol><li><p>Carousel paged scroll image controller</p></li><li><p>Visit Homepage button</p></li><li><p>Call CEI button</p></li></ol>
SWIFT_CLASS("_TtC7CEInema18HomeViewController")
@interface HomeViewController : UIViewController <UIScrollViewDelegate, UITabBarControllerDelegate>

/// visit "www.ceitraining.org" button outlet
@property (nonatomic, weak) IBOutlet UIButton * __null_unspecified visitHomeButton;

/// scroll view outlet
@property (nonatomic, weak) IBOutlet UIScrollView * __null_unspecified pageScrollView;

/// page controller for paged scroll view to controll the behavior of homepage carousel
@property (nonatomic, weak) IBOutlet UIPageControl * __null_unspecified pageControl;

/// carousel image array
@property (nonatomic, copy) NSArray * __nonnull pageImages;

/// visit home button touched
///
/// \param sender button outlet
///
/// \returns none
- (IBAction)VisitHomepage:(id __nonnull)sender;

/// Call CEI line when the "call" button touched
///
/// \param AnyObject passed in from storyboard
///
/// \returns nothing
- (IBAction)callCEI:(id __nonnull)sender;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidLoad;

/// Move the carousel pages automatically to the next page.
/// To the first page if the reaches the end
///
/// \param nothing 
///
/// \returns nothing
- (void)moveToNextPage;

/// Dynamically load pageview on the paged scroll view
///
/// \param int one int number indicate the position of current page
///
/// \returns nothing
- (void)loadPage:(NSInteger)page;

/// Remove a page from the scroll view and reset the container array
///
/// \param int one int number indicate the position of current page
///
/// \returns nothing
- (void)purgePage:(NSInteger)page;

/// Dynamically load current page on scroll view.
/// After determining the position, call loadPage() and purgePage().
///
/// \param nothing 
///
/// \returns nothing
- (void)loadVisiblePages;
- (void)scrollViewDidScroll:(UIScrollView * __nonnull)scrollView;
- (void)willAnimateRotationToInterfaceOrientation:(UIInterfaceOrientation)toInterfaceOrientation duration:(NSTimeInterval)duration;

/// Detect the tap event and trigger following behaviors
///
/// For different pages:
///
/// <ol><li><p>Page two: call cei line</p></li><li><p>Page three: perform segue and move the the tools page</p></li><li><p>page four: perform segue and move to newsletter sign up page</p></li></ol>
/// \param nothing 
///
/// \returns nothing
- (void)tapDetected;

/// Switch top view to the tab bar: 2
///
/// \param none 
///
/// \returns none
- (void)switch2ToolTab;

/// Pop navigation stack to the root when "Home" tabed
- (void)tabBarController:(UITabBarController * __nonnull)tabBarController didSelectViewController:(UIViewController * __nonnull)viewController;
- (SWIFT_NULLABILITY(nonnull) instancetype)initWithNibName:(NSString * __nullable)nibNameOrNil bundle:(NSBundle * __nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (SWIFT_NULLABILITY(nonnull) instancetype)initWithCoder:(NSCoder * __nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class UIView;
@class NSData;
@class MFMailComposeViewController;
@class NSError;
@class UIBarButtonItem;


/// Media detail controller
///
/// Main functions
///
/// <ol><li><p>Load lecture detail thru XML file</p></li><li><p>Play video</p></li><li><p>Save "Favorites" to core data</p></li><li><p>Share thru Activity Controller</p></li><li><p>Report video review to CEI team thru email</p></li></ol>
SWIFT_CLASS("_TtC7CEInema25MediaDetailViewController")
@interface MediaDetailViewController : UIViewController <MFMailComposeViewControllerDelegate, UINavigationControllerDelegate>

/// media title outlet
@property (nonatomic, weak) IBOutlet UILabel * __null_unspecified mediaDetailTitle;

/// media date outlet
@property (nonatomic, weak) IBOutlet UILabel * __null_unspecified mediaDateLabel;

/// presenterName outlet
@property (nonatomic, weak) IBOutlet UILabel * __null_unspecified presenterNameLabel;

/// presenter title outlet, eg.MD, PHD...
@property (nonatomic, weak) IBOutlet UILabel * __null_unspecified presenterTitleLabel;

/// presenter employer outlet, eg. U of R..
@property (nonatomic, weak) IBOutlet UILabel * __null_unspecified presenterEmpLabel;

/// media thumbnail image outlet
@property (nonatomic, weak) IBOutlet UIImageView * __null_unspecified mediaImage;

/// learning objectives outlet
@property (nonatomic, weak) IBOutlet UILabel * __null_unspecified objContentsLabel;

/// play button touched, then launch MPVC
///
/// \param play button outlet
///
/// \returns none
- (IBAction)playButtonTouched:(UIButton * __nonnull)sender;

/// detail view outlet
@property (nonatomic) IBOutlet UIView * __null_unspecified mediaDetailView;

/// share button outlet
@property (nonatomic, weak) IBOutlet UIBarButtonItem * __null_unspecified shareButton;

/// media title
@property (nonatomic, copy) NSString * __nonnull mediaTitle;

/// media ID
@property (nonatomic, copy) NSString * __nonnull mediaID;
@property (nonatomic, copy) NSString * __nonnull mediaDate;
@property (nonatomic, copy) NSString * __nonnull presenterName;
@property (nonatomic, copy) NSString * __nonnull presenterLastName;
@property (nonatomic, copy) NSString * __nonnull presenterCred;

/// presenter title, eg. Medical Officer..
@property (nonatomic, copy) NSString * __nonnull presenterTitle;
@property (nonatomic, copy) NSString * __nonnull presenterEmp;
@property (nonatomic, copy) NSString * __nonnull imgThumbnail;
@property (nonatomic, copy) NSString * __nonnull videoFormatPath;
@property (nonatomic, copy) NSString * __nonnull videoFormatFileName;
@property (nonatomic, copy) NSString * __nonnull objectives;

/// url to fetch media detail info thru xml
@property (nonatomic, copy) NSString * __nonnull fetchUrl;

/// media resources url
@property (nonatomic, copy) NSString * __nonnull mediaUrl;

/// xml data parsed in
@property (nonatomic) NSData * __nullable xmlData;
- (void)viewWillAppear:(BOOL)animated;

/// add MPVC to the view
///
/// \param nothing 
///
/// \returns nothing
- (void)playMovie;
- (IBAction)contactButton:(id __nonnull)sender;

/// compose email to CEI support team
///
/// \param nothing 
///
/// \returns nothing
- (void)emailCEI;
- (void)viewDidLoad;

/// Parse XML file by SWXMLHash.
/// Then demonstrate parsed info on media detail page
///
/// \param nothing 
///
/// \returns nothing
- (void)beginParsing;
- (IBAction)saveButton:(id __nonnull)sender;

/// Once the user press save button:
///
/// <ol><li><p>Trigger html request to save the media ID</p></li><li><p>Save media info into Core Data</p></li></ol>
/// \param title The title of one media
///
/// \param presenter Full name of the presenter
///
/// \param date Date of the presentation
///
/// \param imageThumbnail Short url of thumbnail image
///
/// \returns nothing
- (void)saveMedia:(NSString * __nonnull)title presenter:(NSString * __nonnull)presenter date:(NSString * __nonnull)date imageThumbnail:(NSString * __nonnull)imageThumbnail id:(NSString * __nonnull)id;

/// Verify the media video url to see if WOWZA media server is working
///
/// \param urlString Completed video url
///
/// \returns true / false
- (BOOL)verifyUrl:(NSString * __nullable)urlString;
- (void)mailComposeController:(MFMailComposeViewController * __null_unspecified)controller didFinishWithResult:(MFMailComposeResult)result error:(NSError * __null_unspecified)error;
- (IBAction)PostSocialMedia:(id __nonnull)sender;
- (SWIFT_NULLABILITY(nonnull) instancetype)initWithNibName:(NSString * __nullable)nibNameOrNil bundle:(NSBundle * __nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (SWIFT_NULLABILITY(nonnull) instancetype)initWithCoder:(NSCoder * __nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class NSManagedObject;


/// Favorites table view controller
///
/// Main functions:
///
/// <ol><li><p>Load saved favorites to table view</p></li><li><p>Modify Core Data database tuples</p></li><li><p>Seque to lecture detail page</p></li></ol>
SWIFT_CLASS("_TtC7CEInema24SavedTableViewController")
@interface SavedTableViewController : UITableViewController

/// Table view outlet
@property (nonatomic) IBOutlet UITableView * __null_unspecified savedTableView;

/// Core data array
@property (nonatomic, copy) NSArray * __nonnull media;
- (void)viewWillAppear:(BOOL)animated;

/// Fetch data from Core Data and then reload the table view
- (void)loadData;
- (void)setEditing:(BOOL)editing animated:(BOOL)animated;
- (void)viewDidLoad;
- (void)didReceiveMemoryWarning;
- (NSInteger)numberOfSectionsInTableView:(UITableView * __nonnull)tableView;
- (NSInteger)tableView:(UITableView * __nonnull)tableView numberOfRowsInSection:(NSInteger)section;
- (UITableViewCell * __nonnull)tableView:(UITableView * __nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * __nonnull)indexPath;
- (BOOL)tableView:(UITableView * __nonnull)tableView canEditRowAtIndexPath:(NSIndexPath * __nonnull)indexPath;
- (void)tableView:(UITableView * __nonnull)tableView commitEditingStyle:(UITableViewCellEditingStyle)editingStyle forRowAtIndexPath:(NSIndexPath * __nonnull)indexPath;

/// seque to the detail view
- (void)prepareForSegue:(UIStoryboardSegue * __nonnull)segue sender:(id __nullable)sender;
- (SWIFT_NULLABILITY(nonnull) instancetype)initWithStyle:(UITableViewStyle)style OBJC_DESIGNATED_INITIALIZER;
- (SWIFT_NULLABILITY(null_unspecified) instancetype)initWithNibName:(NSString * __null_unspecified)nibNameOrNil bundle:(NSBundle * __null_unspecified)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (SWIFT_NULLABILITY(null_unspecified) instancetype)initWithCoder:(NSCoder * __null_unspecified)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class UITextField;


/// Sign up page controller
///
/// Help user register for the newsletter
SWIFT_CLASS("_TtC7CEInema20SignupViewController")
@interface SignupViewController : UIViewController <UITextFieldDelegate>

/// user name text field outlet
@property (nonatomic, weak) IBOutlet UITextField * __null_unspecified SignupName;

/// user email address field outlet
@property (nonatomic, weak) IBOutlet UITextField * __null_unspecified SignupEmail;

/// Confirm button touched, call confirm()
- (IBAction)ConfirmButton:(id __nonnull)sender;

/// Cancel button touched, return to Home view
- (IBAction)CancelButton:(id __nonnull)sender;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidLoad;
- (BOOL)textFieldShouldReturn:(UITextField * __nonnull)textField;
- (void)textFieldDidBeginEditing:(UITextField * __nonnull)textField;
- (void)textFieldDidEndEditing:(UITextField * __nonnull)textField;

/// Change view position when keyboard shows up
///
/// \param up indicate the direction of keyboard 
///
/// \param moveValue indicate the amount of distance need to move
///
/// \returns none
- (void)animateViewMoving:(BOOL)up moveValue:(CGFloat)moveValue;

/// Validate the email address
///
/// \param String input email address
///
/// \returns Bool indicate if the addresss is valid or not
- (BOOL)isValidEmail:(NSString * __nonnull)testStr;
- (SWIFT_NULLABILITY(nonnull) instancetype)initWithNibName:(NSString * __nullable)nibNameOrNil bundle:(NSBundle * __nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (SWIFT_NULLABILITY(nonnull) instancetype)initWithCoder:(NSCoder * __nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end



/// Table view cell prototype
SWIFT_CLASS("_TtC7CEInema18ToolsTableViewCell")
@interface ToolsTableViewCell : UITableViewCell
@property (nonatomic, weak) IBOutlet UILabel * __null_unspecified toolTitle;
@property (nonatomic, weak) IBOutlet UILabel * __null_unspecified toolPostingDate;
@property (nonatomic, weak) IBOutlet UILabel * __null_unspecified toolPublisher;
- (SWIFT_NULLABILITY(nonnull) instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * __nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER;
- (SWIFT_NULLABILITY(nonnull) instancetype)initWithCoder:(NSCoder * __nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end



/// Simulation tools table view controller
///
/// Main functions:
///
/// <ol><li><p>Load simulation tools from web server thru xml file</p></li><li><p>Segue to tool detail page</p></li></ol>
SWIFT_CLASS("_TtC7CEInema24ToolsTableViewController")
@interface ToolsTableViewController : UITableViewController

/// table view outlet
@property (nonatomic) IBOutlet UITableView * __null_unspecified toolsData;

/// count the number of tools
@property (nonatomic) NSInteger toolCounter;

/// map from index in table view to xml indexer
@property (nonatomic, copy) NSDictionary * __nonnull toolMap;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidLoad;

/// Parse XML file by SWXMLHash. 
/// After that, eliminate tuples that marked as "hide"
/// The map "toolmap" will map the index in table view to the index in parsed XML Indexer
///
/// \param nothing 
///
/// \returns nothing
- (void)beginParsing;
- (NSInteger)numberOfSectionsInTableView:(UITableView * __nonnull)tableView;
- (NSInteger)tableView:(UITableView * __nonnull)tableView numberOfRowsInSection:(NSInteger)section;
- (UITableViewCell * __nonnull)tableView:(UITableView * __nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * __nonnull)indexPath;
- (void)prepareForSegue:(UIStoryboardSegue * __nonnull)segue sender:(id __nullable)sender;
- (SWIFT_NULLABILITY(nonnull) instancetype)initWithStyle:(UITableViewStyle)style OBJC_DESIGNATED_INITIALIZER;
- (SWIFT_NULLABILITY(null_unspecified) instancetype)initWithNibName:(NSString * __null_unspecified)nibNameOrNil bundle:(NSBundle * __null_unspecified)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (SWIFT_NULLABILITY(null_unspecified) instancetype)initWithCoder:(NSCoder * __null_unspecified)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class UIWebView;


/// Simulation tool detail page
SWIFT_CLASS("_TtC7CEInema22ToolsWebViewController")
@interface ToolsWebViewController : UIViewController

/// UI web view outlet
@property (nonatomic, weak) IBOutlet UIWebView * __null_unspecified toolWebView;

/// Tool full URL
@property (nonatomic, copy) NSString * __nonnull toolUrl;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidLoad;
- (SWIFT_NULLABILITY(nonnull) instancetype)initWithNibName:(NSString * __nullable)nibNameOrNil bundle:(NSBundle * __nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (SWIFT_NULLABILITY(nonnull) instancetype)initWithCoder:(NSCoder * __nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end



/// Web view controller to load CEI homepage
SWIFT_CLASS("_TtC7CEInema17WebViewController")
@interface WebViewController : UIViewController

/// UI Web View outlet
@property (nonatomic, weak) IBOutlet UIWebView * __null_unspecified webView;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidLoad;
- (SWIFT_NULLABILITY(nonnull) instancetype)initWithNibName:(NSString * __nullable)nibNameOrNil bundle:(NSBundle * __nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (SWIFT_NULLABILITY(nonnull) instancetype)initWithCoder:(NSCoder * __nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

#pragma clang diagnostic pop
